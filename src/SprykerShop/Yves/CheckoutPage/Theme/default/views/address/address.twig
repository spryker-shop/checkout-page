{% extends template('page-layout-checkout', 'CheckoutPage') %}

{% define data = {
    forms: {
        address: _view.addressesForm,
        shipping: _view.addressesForm.shippingAddress,
        billing: _view.addressesForm.billingAddress,
        items: _view.addressesForm.items,
    },
    isMultipleShipmentEnabled: _view.addressesForm.vars.value.isMultipleShipmentEnabled,
    title: 'checkout.step.address.title' | trans,
} %}

{% block content %}
    {% set companyBusinessUnitShippingAddressWidget = findWidget('CompanyBusinessUnitAddressWidget', ['shippingAddress', data.forms.shipping.vars.data]) %}
    {% set isCompanyBusinessUnitShippingAddressApplicable = companyBusinessUnitShippingAddressWidget and companyBusinessUnitShippingAddressWidget.isApplicable %}

    {% embed molecule('form') with {
        class: 'box',
        data: {
            title: 'page.checkout.address.shipping-address' | trans,
            form: data.forms.address,
            submit: {
                enable: true,
                text: 'checkout.step.shipment' | trans,
                class: 'button button--saccess js-address__form-submit',
            },
        },
        embed: {
            forms: {
                shipping: data.forms.shipping,
                billing: data.forms.billing,
                items: data.forms.items,
            },
            isMultipleShipmentEnabled: data.isMultipleShipmentEnabled,
            companyBusinessUnitShippingAddressWidget: companyBusinessUnitShippingAddressWidget,
            isCompanyBusinessUnitShippingAddressApplicable: isCompanyBusinessUnitShippingAddressApplicable,
        },
    } only %}
        {% block fields %}
            {% set hasShippingAddresses = data.form.shippingAddress.id_customer_address is defined %}
            {% set hasCompanyUnitAddress = data.form.shippingAddress.id_company_unit_address is defined %}

            {% set hasShippingAddressesAndApplicable = embed.isCompanyBusinessUnitShippingAddressApplicable ? true : hasShippingAddresses %}

            <div class="grid col col--sm-12 js-form-handler__shippingAddress">
                {% if hasShippingAddressesAndApplicable %}
                    <div class="form__field col col--sm-6">
                        <ul class="list spacing-y">
                            {% if embed.isCompanyBusinessUnitShippingAddressApplicable %}
                                {% widget embed.companyBusinessUnitShippingAddressWidget with {
                                    data: {
                                        isMultipleShipmentEnabled: embed.isMultipleShipmentEnabled,
                                        items: embed.forms.items,
                                    },
                                } only %}
                                {% endwidget %}

                                {% if hasShippingAddresses %}
                                    {% do data.form.shippingAddress.id_customer_address.setRendered %}
                                {% endif %}

                                {% if hasCompanyUnitAddress %}
                                    {% do data.form.shippingAddress.id_company_unit_address.setRendered %}
                                {% endif %}

                            {% else %}
                                <li class="list__item spacing-y">
                                    {{
                                    form_row(embed.forms.shipping.id_customer_address, {
                                        label: 'page.checkout.address.delivery.address_select' | trans,
                                        component: molecule('select'),
                                    })
                                    }}
                                </li>
                            {% endif %}
                        </ul>
                    </div>
                {% endif %}

                {% include molecule('form') with {
                    class: 'js-address__shipping' ~ (hasShippingAddressesAndApplicable ? ' is-hidden'),
                    data: {
                        form: embed.forms.shipping,
                        enableStart: false,
                        enableEnd: false,
                        layout: {
                            salutation: 'col col--sm-12 col--lg-2',
                            first_name: 'col col--sm-12 col--lg-5',
                            last_name: 'col col--sm-12 col--lg-5',
                            address1: 'col col--sm-12 col--md-8 col--lg-10',
                            address2: 'col col--sm-12 col--md-4 col--lg-2',
                            zip_code: 'col col--sm-6 col--lg-4',
                            city: 'col col--sm-6 col--lg-4',
                            iso2_code: 'col col--sm-12 col--lg-4',
                        },
                    },
                } only %}
            </div>

            {% if embed.isMultipleShipmentEnabled %}
                {% include molecule('address-item-form', 'CheckoutPage') with {
                    class: 'js-address__items-target col col--sm-12 is-hidden',
                    data: {
                        form: embed.forms.items,
                        shippingForm: embed.forms.shipping,
                    },
                } only %}
            {% endif %}

            <div class="form__field col col--sm-12 js-address__billingSameAsShipping">
                {{ form_row(data.form.billingSameAsShipping, {
                    component: molecule('toggler-checkbox'),
                    attributes: {
                        'target-selector': '.js-address__billing-same-as-shipping',
                        'class-to-toggle': 'is-hidden',
                        'add-class-when-checked': true,
                    },
                }) }}
            </div>

            <div class="grid col col--sm-12 js-form-handler__billingAddress">
                {% embed molecule('form') with {
                    class: 'is-hidden form--extend spacing-top spacing-top--big js-address__billing-same-as-shipping',
                    data: {
                        title: 'page.checkout.address.billing-address' | trans,
                        form: embed.forms.billing,
                        enableStart: false,
                        enableEnd: false,
                        layout: {
                            salutation: 'col col--sm-12 col--lg-2',
                            first_name: 'col col--sm-12 col--lg-5',
                            last_name: 'col col--sm-12 col--lg-5',
                            address1: 'col col--sm-8 col--lg-10',
                            address2: 'col col--sm-4 col--lg-2',
                            zip_code: 'col col--sm-6 col--lg-4',
                            city: 'col col--sm-6 col--lg-4',
                            iso2_code: 'col col--sm-12 col--lg-4',
                        },
                    },
                } only %}
                    {% block fields %}
                        {% set companyBusinessUnitBillingAddressWidget = findWidget('CompanyBusinessUnitAddressWidget', ['billingAddress', data.form.vars.data]) %}
                        {% set isCompanyBusinessUnitBillingAddressApplicable = companyBusinessUnitBillingAddressWidget and companyBusinessUnitBillingAddressWidget.isApplicable %}
                        {% set hasBillingAddresses = data.form.id_customer_address is defined %}
                        {% set hasBillingCompanyUnitAddresses = data.form.id_company_unit_address is defined %}
                        {% set hasBillingAddressesAndApplicable = isCompanyBusinessUnitBillingAddressApplicable ? true : hasBillingAddresses %}

                        {% if hasBillingAddressesAndApplicable %}
                            <div class="form__field col col--sm-6">
                                <ul class="list spacing-y">
                                    {% if isCompanyBusinessUnitBillingAddressApplicable %}
                                        {% widget companyBusinessUnitBillingAddressWidget %}{% endwidget %}

                                        {% if hasBillingAddresses %}
                                            {% do data.form.id_customer_address.setRendered %}
                                        {% endif %}

                                        {% if hasBillingCompanyUnitAddresses %}
                                            {% do data.form.id_company_unit_address.setRendered %}
                                        {% endif %}

                                    {% else %}
                                        <li class="list__item spacing-y">
                                            {{
                                            form_row(data.form.id_customer_address, {
                                                label: 'page.checkout.address.billing.address_select' | trans,
                                                component: molecule('select'),
                                            })
                                            }}
                                        </li>
                                    {% endif %}
                                </ul>
                            </div>
                        {% endif %}

                        <div class="js-address__billing {{ hasBillingAddressesAndApplicable ? ' is-hidden' }}">
                            {{parent()}}
                        </div>
                    {% endblock %}
                {% endembed %}
            </div>
        {% endblock %}

        {% block actions %}
            <div class="grid grid--middle grid--justify">
                <div class="col">
                    {% set optionValueDeliverToMultipleAddresses = '-1' %}
                    {% if not embed.isCompanyBusinessUnitShippingAddressApplicable %}
                        {% set existingShippingAddressSelectSelector = embed.forms.shipping.id_customer_address is defined ? '[name="' ~ embed.forms.shipping.id_customer_address.vars.full_name ~ '"]' : '' %}
                        {% set existingBillingAddressSelectSelector = embed.forms.billing.id_customer_address is defined ? '[name="' ~ embed.forms.billing.id_customer_address.vars.full_name ~ '"]' : '' %}
                    {% else %}
                        {% set existingShippingAddressSelectSelector = '.js-form-select-address__shippingAddress' %}
                        {% set existingBillingAddressSelectSelector = '.js-form-select-address__billingAddress' %}
                    {% endif %}

                    {% include molecule('address-form-toggler', 'CustomerPage') ignore missing with {
                        attributes: {
                            'trigger-selector': existingShippingAddressSelectSelector | default(''),
                            'target-selector': '.js-address__shipping',
                            'sub-target-selector': '.js-address__items-target',
                            'form-billing-address-selector': '.js-address__billing-same-as-shipping',
                            'billing-same-as-shipping-selector': '.js-address__billingSameAsShipping',
                            'billing-same-as-shipping-toggler-selector': '[name="addressesForm[billingSameAsShipping]"]',
                            'toggle-option-value': optionValueDeliverToMultipleAddresses,
                        },
                    } only %}

                    {% include molecule('address-form-toggler', 'CustomerPage') ignore missing with {
                        attributes: {
                            'trigger-selector': existingBillingAddressSelectSelector | default(''),
                            'target-selector': '.js-address__billing',
                        },
                    } only %}

                    {% if data.form.isAddressSavingSkipped is defined %}
                        {% include molecule('save-new-address', 'CustomerPage') ignore missing with {
                            class: 'col is-hidden',
                            data: {
                                form: data.form,
                            },
                            attributes: {
                                'shipping-address-toggler-selector': '[name="' ~ embed.forms.shipping.vars.full_name ~ '[id_customer_address]"]',
                                'shipping-company-address-toggler-selector': '[name="' ~ embed.forms.shipping.vars.full_name ~ '[id_company_unit_address]"]',
                                'billing-address-toggler-selector': '[name="' ~ embed.forms.billing.vars.full_name ~ '[id_customer_address]"]',
                                'billing-company-address-toggler-selector': '[name="' ~ embed.forms.billing.vars.full_name ~ '[id_company_unit_address]"]',
                                'billing-same-as-shipping-toggler-selector': '[name="' ~ data.form.billingSameAsShipping.vars.full_name ~ '"]',
                                'save-address-toggler-selector': '[name="' ~ data.form.isAddressSavingSkipped.vars.full_name ~ '"]',
                                'business-unit-shipping-address-toggler-selector': '.js-form-select-address__shippingAddress',
                                'toggle-option-value': optionValueDeliverToMultipleAddresses,
                            },
                        } only %}
                    {% endif %}
                </div>

                <div class="col">
                    {{ parent() }}
                </div>
            </div>
        {% endblock %}
    {% endembed %}
{% endblock %}
